version: '3.5'

services:

  postgres:
    container_name: curation.postgres
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} --host=postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    container_name: curation.server
    restart: always
    build: ./server
    ports:
      - "8000:8000"
    volumes:
      - ./server:/server
    environment:
      - PYTHONUNBUFFERED=1
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOSTNAME=${POSTGRES_HOSTNAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      postgres:
        condition: service_healthy

  client:
    container_name: curation.client
    command: bash -c "rm -rf /client/node_modules/*"
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./client:/client
      - exclude:/client/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"

volumes:
  exclude: